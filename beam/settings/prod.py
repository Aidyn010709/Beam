# mypy: ignore-errors
"""

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings_folder and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import django_stubs_ext
from decouple import config

from beam.settings.base import *

django_stubs_ext.monkeypatch()

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
STATICFILES_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# DigitalOcean Spaces settings_folder
AWS_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = config("BUCKET_NAME")
# AWS_S3_REGION_NAME = config("AWS_S3_REGION_NAME")  # e.g., 'nyc3' for New York 3
AWS_S3_ENDPOINT_URL = config("AWS_S3_ENDPOINT_URL")
AWS_QUERYSTRING_AUTH = config("AWS_QUERYSTRING_AUTH", cast=bool)

AWS_S3_CUSTOM_DOMAIN = None

# Optional: Additional S3 settings_folder
AWS_S3_OBJECT_PARAMETERS = {
    "CacheControl": "max-age=86400",
}
AWS_LOCATION = "static"
AWS_LOCATION_MEDIA = "media"
AWS_DEFAULT_ACL = "public-read"
STATIC_URL = "{}/{}/".format(AWS_S3_ENDPOINT_URL, AWS_LOCATION)
STATIC_ROOT = BASE_DIR / "static"

MEDIA_URL = "{}/{}/".format(AWS_S3_ENDPOINT_URL, AWS_LOCATION_MEDIA)
MEDIA_ROOT = config("AWS_S3_ENDPOINT_URL") / BASE_DIR / "media"


SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"},
        "x-api-key": {"type": "apiKey", "name": "x-api-key", "in": "header"},
    },
    "USE_SESSION_AUTH": False,
}